name: Test Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Check formatting
      run: |
        if [ "$(gofmt -s -l . | grep -v installer/ | wc -l)" -gt 0 ]; then
          echo "The following files are not formatted:"
          gofmt -s -l . | grep -v installer/
          exit 1
        fi
    
    - name: Run go vet
      run: go vet ./src/...
    
    - name: Run tests with coverage
      run: |
        go test -coverprofile=coverage.out ./src/...
        go tool cover -func=coverage.out
    
    - name: Display coverage summary
      run: |
        echo "Coverage Summary:"
        go tool cover -func=coverage.out | grep total
        
    - name: Generate coverage report
      run: |
        go tool cover -html=coverage.out -o coverage.html
        
    - name: Extract coverage percentage
      run: |
        COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print $3}' | sed 's/%//')
        echo "COVERAGE=$COVERAGE" >> $GITHUB_ENV
        echo "Coverage: $COVERAGE%"
    
    - name: Update README badge
      run: |
        # Determine badge color
        if (( $(echo "$COVERAGE > 80" | bc -l) )); then COLOR="brightgreen"; fi
        if (( $(echo "$COVERAGE > 60" | bc -l) )) && (( $(echo "$COVERAGE <= 80" | bc -l) )); then COLOR="yellow"; fi
        if (( $(echo "$COVERAGE <= 60" | bc -l) )); then COLOR="red"; fi
        
        # Update README.md with new coverage badge
        sed -i "s/Coverage-[0-9.]*%25-[a-z]*/Coverage-$COVERAGE%25-$COLOR/" README.md
    
    - name: Verify changed files
      uses: tj-actions/verify-changed-files@v17
      id: verify-changed-files
      with:
        files: README.md
    
    - name: Commit changes
      if: steps.verify-changed-files.outputs.files_changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add README.md
        git commit -m "Updated coverage badge to $COVERAGE%"
    
    - name: Push changes
      if: steps.verify-changed-files.outputs.files_changed == 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}
    
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: |
          coverage.out
          coverage.html